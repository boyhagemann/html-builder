# The nodes contain components that either needs to be rendered to the DOM
# or node
nodes:
  - id: 1
    type: div
    properties:
      className: .page
  - id: 2
    parent: 1
    type: h1
    text: Hello World
    order: 0
  - id: 3
    parent: 1
    type: p
    text: A simple intro text
    order: 1
  - id: 4
    parent: 3
    type: ul
  - id: 5
    parent: 4
    type: collection
    properties:
      store: products
      alias: my-alias.store
  - id: 6
    parent: 5
    type: li
    text: {{my-alias.store.title_copied}}

# Events
events:
  - id: 1
    node: 4
    type: event
    properties:
      on: click
      action: INCREMENT
      payload:
        amount: 1
    order: 1

# The producers produce values over time, independent of any Node component.
producers:
  - id: 1
    type: timer
    properties:
      interval: 1000

# The operators are bound to one Node component and are executed
# in the given order after a Node is rendered.
operators:
  - id: 1
    node: 5
    type: copy
    properties:

      from: title
      to: title_copied
    order: 1
  - id: 2
    event: 1
    type: active
    properties:
      condition: a-nice-condition
    order: 1
  - id: 2
    event: 1
    type: debounce
    properties:
      time: 500
    order: 2

stores:
  - id: 1
    name: nodes
    connection:
      adapter: rest
      config:
        uri: http://domain.com/rest/nodes
        method: GET
    collection: true
    driver: dom-renderer
  - id: 2
    name: products
    connection:
      adapter: rest
      config:
        uri: http://domain.com/rest/store
        method: GET
    collection: true
    driver: generic

conditions:
  - id: 1
    name: a-nice-condition
    label: A nice condition
    type: or
    children:
      - id: 2
        name: If A
        type: and
        state: {{my-alias.store.title}}
        operator: equals
        value: Test title
      - id: 3
        name: If B
        type: and
        state: {{my-alias.store.title}}
        operator: ends_with
        value: Test